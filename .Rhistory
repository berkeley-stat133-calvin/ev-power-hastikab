library(tidyverse)
library(maps)
library(tidyverse)
library(maps)
# Load datasets
renew21 <- read_csv("data/renew-use-2021.csv")
renew22 <- read_csv("data/renew-use-2022.csv")
renew23 <- read_csv("data/renew-use-2023.csv")
total21 <- read_csv("data/total-use-2021.csv")
total22 <- read_csv("data/total-use-2022.csv")
total23 <- read_csv("data/total-use-2023.csv")
price <- read_csv("data/av-energy-price-2021-2023.csv")
evs   <- read_csv("data/ev-registrations-by-state-2023.csv")
# Clean column names
clean_names <- function(df) {
df %>% rename_all(~ str_to_lower(.) %>% str_replace_all("[^a-z0-9]+", "_"))
}
renew21 <- clean_names(renew21)
renew22 <- clean_names(renew22)
renew23 <- clean_names(renew23)
total21 <- clean_names(total21)
total22 <- clean_names(total22)
total23 <- clean_names(total23)
price   <- clean_names(price)
evs     <- clean_names(evs)
# Standardize state names
fix_states <- function(df) {
df %>% mutate(state = str_trim(state),
state = str_to_title(state))
}
renew21 <- fix_states(renew21)
renew22 <- fix_states(renew22)
renew23 <- fix_states(renew23)
total21 <- fix_states(total21)
renew21 <- renew21 %>% mutate(year = 2021)
renew23 <- renew23 %>% mutate(year = 2023)
total21 <- total21 %>% mutate(year = 2021)
total23 <- total23 %>% mutate(year = 2023)
renew_all <- bind_rows(renew21, renew23)
total_all <- bind_rows(total21, total23)
energy_joined <- renew_all %>%
inner_join(total_all, by = c("state", "year"), suffix = c("_renew", "_total"))
library(tidyverse)
library(maps)
library(tidyverse)
library(maps)
library(tidyverse)
library(maps)
library(tidyverse)
library(maps)
library(tidyverse)
library(maps)
library(tidyverse)
library(maps)
# Load datasets
renew21 <- read_csv("data/renew-use-2021.csv")
renew22 <- read_csv("data/renew-use-2022.csv")
renew23 <- read_csv("data/renew-use-2023.csv")
total21 <- read_csv("data/total-use-2021.csv")
total22 <- read_csv("data/total-use-2022.csv")
total23 <- read_csv("data/total-use-2023.csv")
price <- read_csv("data/av-energy-price-2021-2023.csv")
evs   <- read_csv("data/ev-registrations-by-state-2023.csv")
# Clean column names
clean_names <- function(df) {
df %>% rename_all(~ str_to_lower(.) %>% str_replace_all("[^a-z0-9]+", "_"))
}
renew21 <- clean_names(renew21)
renew22 <- clean_names(renew22)
renew23 <- clean_names(renew23)
total21 <- clean_names(total21)
total22 <- clean_names(total22)
total23 <- clean_names(total23)
price   <- clean_names(price)
evs     <- clean_names(evs)
# Standardize state names
fix_states <- function(df) {
df %>% mutate(state = str_trim(state),
state = str_to_title(state))
}
renew21 <- fix_states(renew21)
renew22 <- fix_states(renew22)
renew23 <- fix_states(renew23)
total21 <- fix_states(total21)
renew21 <- renew21 %>% mutate(year = 2021)
renew23 <- renew23 %>% mutate(year = 2023)
total21 <- total21 %>% mutate(year = 2021)
total23 <- total23 %>% mutate(year = 2023)
renew_all <- bind_rows(renew21, renew23)
total_all <- bind_rows(total21, total23)
energy_joined <- renew_all %>%
inner_join(total_all, by = c("state", "year"), suffix = c("_renew", "_total"))
rlang::last_trace()
# Load datasets
renew21 <- read_csv("data/renew-use-2021.csv")
renew22 <- read_csv("data/renew-use-2022.csv")
renew23 <- read_csv("data/renew-use-2023.csv")
total21 <- read_csv("data/total-use-2021.csv")
total22 <- read_csv("data/total-use-2022.csv")
total23 <- read_csv("data/total-use-2023.csv")
price <- read_csv("data/av-energy-price-2021-2023.csv")
evs   <- read_csv("data/ev-registrations-by-state-2023.csv")
# Clean column names
clean_names <- function(df) {
df %>% rename_all(~ str_to_lower(.) %>% str_replace_all("[^a-z0-9]+", "_"))
}
renew21 <- clean_names(renew21)
renew22 <- clean_names(renew22)
renew23 <- clean_names(renew23)
total21 <- clean_names(total21)
total22 <- clean_names(total22)
total23 <- clean_names(total23)
price   <- clean_names(price)
evs     <- clean_names(evs)
# Standardize state names
fix_states <- function(df) {
df %>% mutate(state = str_trim(state),
state = str_to_title(state))
}
renew21 <- fix_states(renew21)
renew22 <- fix_states(renew22)
renew23 <- fix_states(renew23)
total21 <- fix_states(total21)
renew21 <- renew21 %>% mutate(year = 2021)
renew23 <- renew23 %>% mutate(year = 2023)
total21 <- total21 %>% mutate(year = 2021)
total23 <- total23 %>% mutate(year = 2023)
renew_all <- bind_rows(renew21, renew23)
total_all <- bind_rows(total21, total23)
energy_joined <- renew_all %>%
inner_join(total_all, by = c("state", "year"), suffix = c("_renew", "_total"))
library(readr)
prep_year <- function(df, value_prefix, yr) {
vcol <- grep(paste0("^", value_prefix, "_", yr, "$"), names(df), value = TRUE)
stopifnot(length(vcol) == 1)
df %>%
mutate(
year  = yr,
value = parse_number(.data[[vcol]])
) %>%
select(state, year, energy_source, value)
}
renew21_tidy <- prep_year(renew21, "renewable_use", 2021)
renew23_tidy <- prep_year(renew23, "renewable_use", 2023)
total21_tidy <- prep_year(total21, "total_use", 2021)
# Load datasets
renew21 <- read_csv("data/renew-use-2021.csv")
renew22 <- read_csv("data/renew-use-2022.csv")
renew23 <- read_csv("data/renew-use-2023.csv")
total21 <- read_csv("data/total-use-2021.csv")
total22 <- read_csv("data/total-use-2022.csv")
total23 <- read_csv("data/total-use-2023.csv")
price <- read_csv("data/av-energy-price-2021-2023.csv")
evs   <- read_csv("data/ev-registrations-by-state-2023.csv")
# Clean column names
clean_names <- function(df) {
df %>% rename_all(~ str_to_lower(.) %>% str_replace_all("[^a-z0-9]+", "_"))
}
renew21 <- clean_names(renew21)
renew22 <- clean_names(renew22)
renew23 <- clean_names(renew23)
total21 <- clean_names(total21)
total22 <- clean_names(total22)
total23 <- clean_names(total23)
price   <- clean_names(price)
evs     <- clean_names(evs)
# Standardize state names
fix_states <- function(df) {
df %>% mutate(state = str_trim(state),
state = str_to_title(state))
}
renew21 <- fix_states(renew21)
renew22 <- fix_states(renew22)
renew23 <- fix_states(renew23)
total21 <- fix_states(total21)
rlang::last_trace()
library(tidyverse)
renew21 <- read_csv("data/renew-use-2021.csv")
renew22 <- read_csv("data/renew-use-2022.csv")
renew23 <- read_csv("data/renew-use-2023.csv")
total21 <- read_csv("data/total-use-2021.csv")
total22 <- read_csv("data/total-use-2022.csv")
total23 <- read_csv("data/total-use-2023.csv")
price <- read_csv("data/av-energy-price-2021-2023.csv")
evs   <- read_csv("data/ev-registrations-by-state-2023.csv")
clean_names <- function(df) {
df %>% rename_all(~ str_to_lower(.) %>% str_replace_all("[^a-z0-9]+", "_"))
}
renew21 <- clean_names(renew21)
renew22 <- clean_names(renew22)
renew23 <- clean_names(renew23)
total21 <- clean_names(total21)
total22 <- clean_names(total22)
total23 <- clean_names(total23)
price   <- clean_names(price)
evs     <- clean_names(evs)
pivot_total <- function(df, year){
id_col <- if ("energy_source" %in% names(df)) "energy_source" else names(df)[1]
df %>%
pivot_longer(
cols = -all_of(id_col),
names_to = "state",
values_to = paste0("total_use_", year)
) %>%
rename(energy_source = !!id_col)
}
total21 <- pivot_total(total21, 2021)
total22 <- pivot_total(total22, 2022)
total23 <- pivot_total(total23, 2023)
fix_states <- function(df){
if (!"state" %in% names(df)) return(df)
df %>% mutate(
state = str_trim(state),
state = str_to_title(state)
)
}
renew21 <- fix_states(renew21)
renew22 <- fix_states(renew22)
renew23 <- fix_states(renew23)
total21 <- fix_states(total21)
total22 <- fix_states(total22)
total23 <- fix_states(total23)
price   <- fix_states(price)
evs     <- fix_states(evs)
make_numeric <- function(df, pattern){
num_cols <- grep(pattern, names(df), value = TRUE)
if (length(num_cols) > 0){
df <- df %>% mutate(across(all_of(num_cols), ~ readr::parse_number(.x)))
}
df
}
renew21 <- make_numeric(renew21, "^renewable_use_")
renew22 <- make_numeric(renew22, "^renewable_use_")
renew23 <- make_numeric(renew23, "^renewable_use_")
total21 <- make_numeric(total21, "^total_use_")
library(tidyverse)
library(maps)
library(tidyverse)
renew21 <- read_csv("data/renew-use-2021.csv")
renew22 <- read_csv("data/renew-use-2022.csv")
renew23 <- read_csv("data/renew-use-2023.csv")
total21 <- read_csv("data/total-use-2021.csv")
total22 <- read_csv("data/total-use-2022.csv")
total23 <- read_csv("data/total-use-2023.csv")
price <- read_csv("data/av-energy-price-2021-2023.csv")
evs   <- read_csv("data/ev-registrations-by-state-2023.csv")
clean_names <- function(df) {
df %>% rename_all(~ str_to_lower(.) %>% str_replace_all("[^a-z0-9]+", "_"))
}
renew21 <- clean_names(renew21)
renew22 <- clean_names(renew22)
renew23 <- clean_names(renew23)
total21 <- clean_names(total21)
total22 <- clean_names(total22)
total23 <- clean_names(total23)
price   <- clean_names(price)
evs     <- clean_names(evs)
pivot_total <- function(df, year){
id_col <- if ("energy_source" %in% names(df)) "energy_source" else names(df)[1]
df %>%
pivot_longer(
cols = -all_of(id_col),
names_to = "state",
values_to = paste0("total_use_", year)
) %>%
rename(energy_source = !!id_col)
}
total21 <- pivot_total(total21, 2021)
total22 <- pivot_total(total22, 2022)
total23 <- pivot_total(total23, 2023)
fix_states <- function(df){
if (!"state" %in% names(df)) return(df)
df %>% mutate(
state = str_trim(state),
state = str_to_title(state)
)
}
renew21 <- fix_states(renew21)
renew22 <- fix_states(renew22)
renew23 <- fix_states(renew23)
total21 <- fix_states(total21)
total22 <- fix_states(total22)
total23 <- fix_states(total23)
price   <- fix_states(price)
evs     <- fix_states(evs)
make_numeric <- function(df, pattern){
num_cols <- grep(pattern, names(df), value = TRUE)
if (length(num_cols) > 0){
df <- df %>% mutate(across(all_of(num_cols), ~ readr::parse_number(.x)))
}
df
}
renew21 <- make_numeric(renew21, "^renewable_use_")
renew22 <- make_numeric(renew22, "^renewable_use_")
renew23 <- make_numeric(renew23, "^renewable_use_")
total21 <- make_numeric(total21, "^total_use_")
rlang::last_trace()
us_map <- map_data("state") |> as_tibble()  # columns: long, lat, group, order, region, subregion
map_df <- renew_change |>
mutate(region = tolower(state)) |>
inner_join(us_map, by = "region")
library(tidyverse)
renew21 <- read_csv("data/renew-use-2021.csv")
renew22 <- read_csv("data/renew-use-2022.csv")
renew23 <- read_csv("data/renew-use-2023.csv")
total21 <- read_csv("data/total-use-2021.csv")
total22 <- read_csv("data/total-use-2022.csv")
total23 <- read_csv("data/total-use-2023.csv")
price <- read_csv("data/av-energy-price-2021-2023.csv")
evs   <- read_csv("data/ev-registrations-by-state-2023.csv")
clean_names <- function(df) {
df %>% rename_all(~ str_to_lower(.) %>% str_replace_all("[^a-z0-9]+", "_"))
}
renew21 <- clean_names(renew21)
renew22 <- clean_names(renew22)
renew23 <- clean_names(renew23)
total21 <- clean_names(total21)
total22 <- clean_names(total22)
total23 <- clean_names(total23)
price   <- clean_names(price)
evs     <- clean_names(evs)
pivot_total <- function(df, year){
id_col <- if ("energy_source" %in% names(df)) "energy_source" else names(df)[1]
df %>%
pivot_longer(
cols = -all_of(id_col),
names_to = "state",
values_to = paste0("total_use_", year)
) %>%
rename(energy_source = !!id_col)
}
total21 <- pivot_total(total21, 2021)
total22 <- pivot_total(total22, 2022)
total23 <- pivot_total(total23, 2023)
fix_states <- function(df){
if (!"state" %in% names(df)) return(df)
df %>% mutate(
state = str_trim(state),
state = str_to_title(state)
)
}
renew21 <- fix_states(renew21)
renew22 <- fix_states(renew22)
renew23 <- fix_states(renew23)
total21 <- fix_states(total21)
total22 <- fix_states(total22)
total23 <- fix_states(total23)
price   <- fix_states(price)
evs     <- fix_states(evs)
make_numeric <- function(df, pattern){
num_cols <- grep(pattern, names(df), value = TRUE)
if (length(num_cols) > 0){
df <- df %>%
mutate(across(
all_of(num_cols),
~ suppressWarnings(readr::parse_number(as.character(.x)))
))
}
df
}
renew21 <- make_numeric(renew21, "^renewable_use_")
renew22 <- make_numeric(renew22, "^renewable_use_")
renew23 <- make_numeric(renew23, "^renewable_use_")
total21 <- make_numeric(total21, "^total_use_")
total22 <- make_numeric(total22, "^total_use_")
total23 <- make_numeric(total23, "^total_use_")
head(renew21)
head(total21)
head(price)
head(evs)
library(readr)
prep_year <- function(df, value_prefix, yr) {
vcol <- grep(paste0("^", value_prefix, "_", yr, "$"), names(df), value = TRUE)
stopifnot(length(vcol) == 1)
df %>%
mutate(
year  = yr,
value = parse_number(.data[[vcol]])
) %>%
select(state, year, energy_source, value)
}
renew21_tidy <- prep_year(renew21, "renewable_use", 2021)
rlang::last_trace()
us_map <- map_data("state") |> as_tibble()  # columns: long, lat, group, order, region, subregion
map_df <- renew_change |>
mutate(region = tolower(state)) |>
inner_join(us_map, by = "region")
library(readr)
prep_year <- function(df, value_prefix, yr) {
vcol <- grep(paste0("^", value_prefix, "_", yr, "$"), names(df), value = TRUE)
stopifnot(length(vcol) == 1)
# pull the column once, coerce only if needed
vals <- df[[vcol]]
if (!is.numeric(vals)) {
vals <- readr::parse_number(as.character(vals))
}
# ensure energy_source exists (totals should already have it; just in case)
if (!"energy_source" %in% names(df)) {
df$energy_source <- NA_character_
}
tibble::tibble(
state         = df$state,
year          = yr,
energy_source = df$energy_source,
value         = vals
)
}
renew21_tidy <- prep_year(renew21, "renewable_use", 2021)
renew23_tidy <- prep_year(renew23, "renewable_use", 2023)
total21_tidy <- prep_year(total21, "total_use", 2021)
total23_tidy <- prep_year(total23, "total_use", 2023)
renew_by_state <- bind_rows(renew21_tidy, renew23_tidy) %>%
group_by(state, year) %>%
summarise(renewables = sum(value, na.rm = TRUE), .groups = "drop")
total_by_state <- bind_rows(total21_tidy, total23_tidy) %>%
group_by(state, year) %>%
summarise(total = sum(value, na.rm = TRUE), .groups = "drop")
energy_joined <- renew_by_state %>%
inner_join(total_by_state, by = c("state", "year")) %>%
mutate(renew_share = (renewables / total) * 100)
renew_change <- energy_joined %>%
select(state, year, renew_share) %>%
tidyr::pivot_wider(
names_from  = year,
values_from = renew_share,
names_prefix = "share_"
) %>%
mutate(change_2021_2023 = share_2023 - share_2021) %>%
arrange(desc(change_2021_2023))
cat("renew21 columns: ", paste(names(renew21), collapse = ", "), "\n")
cat("total21 columns: ", paste(names(total21), collapse = ", "), "\n")
head(renew_change)
stopifnot(exists("renew_change"))
# 2) Build US states polygons
us_map <- maps::map_data("state") |> as_tibble()  # long, lat, group, order, region, subregion
stopifnot(exists("renew_change"))
us_map <- ggplot2::map_data("state") |> as_tibble()
map_df <- renew_change |>
mutate(region = tolower(state)) |>
inner_join(us_map, by = "region")
ggplot(map_df, aes(x = long, y = lat, group = group, fill = change_2021_2023)) +
geom_polygon(color = "white", linewidth = 0.2) +
coord_fixed(1.3) +
scale_fill_gradient2(
name = "Change in renewable\nshare (pp, 2023–2021)",
midpoint = 0, low = "#b2182b", mid = "white", high = "#2166ac", na.value = "grey90"
) +
labs(
title = "Change in Renewable Energy Share by State (2021 → 2023)",
subtitle = "Positive values indicate an increase",
caption = "Data: renew-use-*.csv and total-use-*.csv"
) +
theme_minimal(base_size = 11) +
theme(
axis.title = element_blank(),
axis.text = element_blank(),
panel.grid = element_blank(),
legend.position = "right"
)
